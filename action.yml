name: Setup QNN SDK
description: Download and setup Qualcomm AI Engine Direct SDK
branding:
  icon: arrow-down-circle
  color: red

inputs:
  qnn-sdk-version:
    description: 'QNN SDK Version'
    required: true
    type: string
    default: '2.32.0.250228'

outputs:
  qnn-sdk-root:
    description: 'QNN SDK Root'
  snpe-root:
    description: 'SNPE Root'

runs:
  using: "composite"
  steps:
    - name: Load cache
      uses: actions/cache@v3
      with:
        key: qnn-sdk-${{ inputs.qnn-sdk-version }}
        path: qairt/${{ inputs.qnn-sdk-version }}
    - if: runner.os == 'windows'
      shell: pwsh
      run: |
        if (-not (Test-Path qairt)) {
          Invoke-WebRequest -Uri https://apigwx-aws.qualcomm.com/qsc/public/v1/api/download/software/sdks/Qualcomm_AI_Runtime_Community/All/${{ inputs.qnn-sdk-version }}/v${{ inputs.qnn-sdk-version }}.zip -OutFile qnn-sdk.zip
          7z x qnn-sdk.zip
          rm qnn-sdk.zip
        }
        & ".\qairt\${{ inputs.qnn-sdk-version }}\bin\envsetup.ps1"
        echo "QNN_SDK_ROOT=$env:QNN_SDK_ROOT" >> $env:GITHUB_ENV
        echo "qnn-sdk-root=$env:QNN_SDK_ROOT" >> $env:GITHUB_OUTPUT
        echo "SNPE_ROOT=$env:SNPE_ROOT" >> $env:GITHUB_ENV
        echo "snpe-root=$env:SNPE_ROOT" >> $env:GITHUB_OUTPUT
    - if: runner.os != 'windows'
      shell: bash
      run: |
        if [ ! -d qairt/${{ inputs.qnn-sdk-version }} ]; then
          curl -L https://apigwx-aws.qualcomm.com/qsc/public/v1/api/download/software/sdks/Qualcomm_AI_Runtime_Community/All/${{ inputs.qnn-sdk-version }}/v${{ inputs.qnn-sdk-version }}.zip -o qnn-sdk.zip
          unzip qnn-sdk.zip
          rm qnn-sdk.zip
        fi
        source qairt/${{ inputs.qnn-sdk-version }}/bin/envsetup.sh
        echo "QNN_SDK_ROOT=$QNN_SDK_ROOT" >> $GITHUB_ENV
        echo "qnn-sdk-root=$QNN_SDK_ROOT" >> $GITHUB_OUTPUT
        echo "SNPE_ROOT=$SNPE_ROOT" >> $GITHUB_ENV
        echo "snpe-root=$SNPE_ROOT" >> $GITHUB_OUTPUT
